{"is_source_file": true, "format": "Python", "description": "Django REST Framework views module for managing 'Note' objects, including endpoints for listing, creating, retrieving, updating, and deleting notes with Swagger API documentation annotations.", "external_files": ["rest_framework.decorators", "rest_framework.response", "rest_framework", "drf_yasg.utils", "drf_yasg", "django.shortcuts", ".models", ".serializers"], "external_methods": ["api_view", "Response", "status", "swagger_auto_schema", "get_object_or_404"], "published": ["health", "notes_collection", "notes_detail"], "classes": [], "methods": [{"name": "health(request)", "description": "Health check endpoint returning a simple message indicating server status.", "scope": "", "scopeKind": ""}, {"name": "notes_collection(request)", "description": "Handles list retrieval and creation of notes. GET returns all notes; POST creates a new note.", "scope": "", "scopeKind": ""}, {"name": "notes_detail(request, id: int)", "description": "Handles retrieval, updating, and deletion of a specific note by ID.", "scope": "", "scopeKind": ""}], "calls": ["Note.objects.all", "NoteSerializer(queryset, many=True)", "NoteSerializer(queryset, many=True)", "NoteSerializer(note).data", "serializer.is_valid", "serializer.save()", "get_object_or_404(Note, id=id)", "NoteSerializer(note).data", "serializer.is_valid", "serializer.save()", "note.delete()"], "search-terms": ["api_view", "Note", "Notes", "notes_collection", "notes_detail", "swagger_auto_schema", "health endpoint", "Django REST Framework", "serializers", "Swagger documentation"], "state": 2, "file_id": 7, "knowledge_revision": 43, "git_revision": "e7db8d9aded46d391d7152c10095e1fa414870b6", "revision_history": [{"24": "e7db8d9aded46d391d7152c10095e1fa414870b6"}, {"43": "e7db8d9aded46d391d7152c10095e1fa414870b6"}], "ctags": [{"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "note_id_param", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/views.py", "pattern": "/^note_id_param = openapi.Parameter('id', openapi.IN_PATH, description=\"Note ID\", type=openapi.TYP/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "notes_collection", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/views.py", "pattern": "/^def notes_collection(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "notes_detail", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/views.py", "pattern": "/^def notes_detail(request, id: int):$/", "language": "Python", "kind": "function", "signature": "(request, id: int)"}], "hash": "cce14a1c3dafcdc39256ec9286d6d3d1", "format-version": 4, "code-base-name": "backend_django_api", "filename": "backend_django_api/api/views.py", "fields": [{"name": "note_id_param = openapi.Parameter('id', openapi.IN_PATH, description=\"Note ID\", type=openapi.TYP/", "scope": "", "scopeKind": "", "description": "unavailable"}]}