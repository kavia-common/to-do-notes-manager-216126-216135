{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the backend API using Django REST Framework's testing tools. It specifically tests the health endpoint to ensure the server is operational.", "external_files": ["rest_framework.test", "django.urls"], "external_methods": ["rest_framework.test.APITestCase", "django.urls.reverse"], "published": [], "classes": [{"name": "HealthTests", "description": "A test case class that verifies the health check endpoint of the API."}], "methods": [{"name": "test_health(self)", "description": "Tests that the health endpoint returns status 200 and the expected message.", "scope": "HealthTests", "scopeKind": "class"}], "calls": ["django.urls.reverse", "self.client.get", "self.assertEqual"], "search-terms": ["APITestCase", "HealthTests", "health endpoint", "Server is up!", "test_health", "Django REST Framework tests"], "state": 2, "file_id": 9, "knowledge_revision": 29, "git_revision": "e7db8d9aded46d391d7152c10095e1fa414870b6", "ctags": [{"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/to-do-notes-manager-216126-216135/backend_django_api/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}], "hash": "b0c02c3b65708d78df1a568b3703f788", "format-version": 4, "code-base-name": "backend_django_api", "filename": "backend_django_api/api/tests.py", "revision_history": [{"29": "e7db8d9aded46d391d7152c10095e1fa414870b6"}]}